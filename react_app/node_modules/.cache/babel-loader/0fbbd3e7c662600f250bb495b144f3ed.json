{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\nimport thunk from 'redux-thunk';\nimport commentsReducer from './comments.js';\nconst rootReducer = combineReducers({\n  comments: commentsReducer\n});\nlet enhancer;\n\nif (process.env.NODE_ENV === 'production') {\n  enhancer = applyMiddleware(thunk);\n} else {\n  const logger = require('redux-logger').default;\n\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  enhancer = composeEnhancers(applyMiddleware(thunk, logger));\n}\n\nconst configureStore = preloadedState => {\n  return createStore(rootReducer, preloadedState, enhancer);\n};\n\nexport default configureStore;","map":{"version":3,"sources":["/home/drew/myrepo/React_EOD-starter/react_app/src/store/index.js"],"names":["createStore","combineReducers","applyMiddleware","compose","thunk","commentsReducer","rootReducer","comments","enhancer","process","env","NODE_ENV","logger","require","default","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","configureStore","preloadedState"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,EAAwDC,OAAxD,QAAuE,OAAvE;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,eAAP,MAA4B,eAA5B;AACA,MAAMC,WAAW,GAAGL,eAAe,CAAC;AAChCM,EAAAA,QAAQ,EAAEF;AADsB,CAAD,CAAnC;AAKA,IAAIG,QAAJ;;AAEA,IAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACvCH,EAAAA,QAAQ,GAAGN,eAAe,CAACE,KAAD,CAA1B;AACH,CAFD,MAEO;AACH,QAAMQ,MAAM,GAAGC,OAAO,CAAC,cAAD,CAAP,CAAwBC,OAAvC;;AACA,QAAMC,gBAAgB,GAClBC,MAAM,CAACC,oCAAP,IAA+Cd,OADnD;AAEAK,EAAAA,QAAQ,GAAGO,gBAAgB,CAACb,eAAe,CAACE,KAAD,EAAQQ,MAAR,CAAhB,CAA3B;AACH;;AAED,MAAMM,cAAc,GAAIC,cAAD,IAAoB;AACvC,SAAOnB,WAAW,CAACM,WAAD,EAAca,cAAd,EAA8BX,QAA9B,CAAlB;AACH,CAFD;;AAIA,eAAeU,cAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\r\nimport thunk from 'redux-thunk';\r\nimport commentsReducer from './comments.js'\r\nconst rootReducer = combineReducers({\r\n    comments: commentsReducer,\r\n    \r\n});\r\n\r\nlet enhancer;\r\n\r\nif (process.env.NODE_ENV === 'production') {\r\n    enhancer = applyMiddleware(thunk);\r\n} else {\r\n    const logger = require('redux-logger').default;\r\n    const composeEnhancers =\r\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n    enhancer = composeEnhancers(applyMiddleware(thunk, logger));\r\n}\r\n\r\nconst configureStore = (preloadedState) => {\r\n    return createStore(rootReducer, preloadedState, enhancer);\r\n};\r\n\r\nexport default configureStore;"]},"metadata":{},"sourceType":"module"}